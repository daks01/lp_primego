---
import { getImage } from "astro:assets";
import Section from "../ui/Section.astro";
import StarTrekText from "../ui/StarTrekText.astro";
// import imgSlide1 from "/src/assets/img/hero-slider/slide-1.png";
// import imgSlide2 from "/src/assets/img/hero-slider/slide_2.png";
// import imgSlide3 from "/src/assets/img/hero-slider/slide_3.png";
import poster from "/src/assets/img/hero-slider/video-poster.png";
import BackgroundText from "../ui/BackgroundText.astro";
import SocialList from "../ui/SocialList.astro";
import { getLangFromUrl, useTranslations } from '../../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const optimizedPoster = poster
  ? await getImage({ src: poster, quality: "80" })
  : { src: "" };

// const imageList = [imgSlide1, imgSlide2, imgSlide3, imgSlide2];
const { backgroundImage } = Astro.props;

const baseUrl = import.meta.env.BASE_URL === "/" ? "" : import.meta.env.BASE_URL;
---

<Section backgroundImage={backgroundImage}>
  <BackgroundText>Primego</BackgroundText>
  <div class="hero-layout">
    <div class="hero">
      <StarTrekText as="h1" class="page-title">{t("common.Primego")}</StarTrekText>
      <div>
        <p class="hero__lead">
          <Fragment set:html={t("main.кроссовки<br /> премиум<br /> твои")}>
        </p>
      </div>
    </div>
    <div class="heroSlider-wrapper">
      <div class="view-3d">
        <svg
          class="view-3d__navigation"
          aria-hidden="true"
          width="324"
          height="132"
          viewBox="0 0 324 132"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M323 59C323 66.7457 318.693 74.2536 310.617 81.2077C302.544 88.159 290.803 94.4644 276.209 99.7797C247.029 110.407 206.65 117 162 117C117.35 117 76.9715 110.407 47.7909 99.7797C33.1965 94.4644 21.4563 88.159 13.3833 81.2077C5.30712 74.2536 1 66.7457 1 59C1 51.2543 5.30712 43.7464 13.3833 36.7923C21.4563 29.841 33.1965 23.5356 47.7909 18.2203C76.9715 7.59284 117.35 1 162 1C206.65 1 247.029 7.59284 276.209 18.2203C290.803 23.5356 302.544 29.841 310.617 36.7923C318.693 43.7464 323 51.2543 323 59Z"
            stroke="url(#paint0_linear_8036_165538)"
            stroke-width="2"></path>
          <circle cx="161" cy="116" r="16" fill="white"></circle>
          <path
            d="M158 111L153 116L158 121"
            stroke="#FC1447"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"></path>
          <path
            d="M164 121L169 116L164 111"
            stroke="#FC1447"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"></path>
          <defs>
            <linearGradient
              id="paint0_linear_8036_165538"
              x1="162"
              y1="20"
              x2="161.898"
              y2="118"
              gradientUnits="userSpaceOnUse"
            >
              <stop stop-opacity="0"></stop>
              <stop offset="1" stop-color="white"></stop>
            </linearGradient>
          </defs>
        </svg>
        <video
          class="view-3d__video"
          data-video
          playsinline
          autoplay
          loop
          muted
          poster={optimizedPoster.src}
        >
          <source src={`${baseUrl}/video/hevc.mov`} type="video/mp4; codecs=hvc1" />
          <source src={`${baseUrl}/video/vp9.webm`} type="video/webm" />
        </video>
        <div class="view-3d__container dragscroll" data-container>
          <div class="view-3d__timeline" data-timeline></div>
        </div>
      </div>
    </div>
  </div>
  <SocialList class="display-none display-mobile-flex justify-content-center" />
</Section>

<script>
  import "dragscroll/dragscroll.js";

  document.addEventListener("DOMContentLoaded", () => {
    const container = document.querySelector("[data-container]");
    const videoEl = document.querySelector("[data-video]");
    const START_VIDEO_FRAME_POSITION = 0.9;

    if (
      !document.body.contains(container) ||
      !document.body.contains(videoEl)
    ) {
      return;
    }

    let lastScrollPosition = 0;
    const containerWidth = container.scrollWidth - container.offsetWidth;

    function updateScrollbarOnStop() {
      const currentTime = videoEl.currentTime;
      const videoDuration = videoEl.duration || 0;

      if (currentTime >= START_VIDEO_FRAME_POSITION) {
        videoEl.pause();
        container.scrollLeft = (containerWidth / videoDuration) * currentTime;
        videoEl.removeEventListener("timeupdate", updateScrollbarOnStop, true);
      }
    }

    function updateCurrentTimeAsScrollbarSay() {
      const isGoNextThick =
        videoEl.readyState !== 4 ||
        lastScrollPosition === container.scrollLeft ||
        !videoEl.paused;

      if (isGoNextThick) {
        return;
      }

      const videoDuration = videoEl.duration;
      const scrollPosition = container.scrollLeft;
      lastScrollPosition = scrollPosition;

      videoEl.currentTime = (videoDuration / containerWidth) * scrollPosition;
    }

    videoEl.addEventListener("timeupdate", updateScrollbarOnStop, true);
    
    setInterval(updateCurrentTimeAsScrollbarSay, 40);
  });
</script>

<style lang="scss">
  .section {
    min-height: calc(var(--section-height) - var(--header-height));
  }
  .page-title {
    margin-bottom: var(--60px);
    font-size: var(--heading-1);
  }
  .hero__lead {
    font-size: calc(var(--1px) * 72);
    line-height: 1.05;
    color: var(--color-gray);
    text-transform: uppercase;
  }
  .hero-layout {
    display: flex;
    margin-bottom: calc(var(--1px) * 150);
  }
  .hero {
    min-width: 40%;
  }
  .heroSlider-wrapper {
    min-width: 60%;
    display: flex;
    align-self: stretch;
    justify-content: flex-end;
  }

  .view-3d {
    position: relative;
    display: flex;
    width: 100%;
  }
  .view-3d__navigation {
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translate(-50%, 0);
    pointer-events: none;
  }
  .view-3d__container {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    overflow: auto;
    scrollbar-width: none;
    z-index: 1;
    cursor: grab;
    &:active {
      cursor: grabbing !important;
    }
  }
  .view-3d__timeline {
    width: 300%;
    height: 100%;
  }
  .view-3d__video {
    width: 100%;
    scale: 1.5;
    pointer-events: none;

    &::-webkit-media-controls {
      display: none !important;
      opacity: 0;
    }
    &::-webkit-media-controls-start-playback-button {
      display: none !important;
    }
  }

  @media screen and (max-width: 1023px) {
    .section {
      order: -1;
    }
    .hero {
      min-width: auto;
      text-align: left;
    }
    .hero-layout {
      margin-bottom: calc(var(--1px) * 90);
      flex-direction: column;
    }
    .page-title {
      font-size: calc(var(--1px) * 128);
      margin-top: calc(var(--1px) * 36);
      margin-bottom: var(--30px);
    }
    .hero__lead {
      font-size: calc(var(--1px) * 36);
      line-height: 1.05;
      margin-bottom: var(--15px);
    }
    .heroSlider-wrapper {
      margin: var(--30px) 0;
    }

    .view-3d__navigation {
      top: 100%;
      bottom: none;
    }
  }
</style>
