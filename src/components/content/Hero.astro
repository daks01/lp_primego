---
import "@splidejs/splide/css/core";
import { Image } from 'astro:assets';
import Section from "../ui/Section.astro";
import StarTrekText from "../ui/StarTrekText.astro";
import Button from "../ui/Button.astro";
import LimitCollection from "./LimitCollection.astro";
import imgSlide1 from "/src/assets/img/hero-slider/slide-1.png";
import imgSlide2 from "/src/assets/img/hero-slider/slide_2.png";
import imgSlide3 from "/src/assets/img/hero-slider/slide_3.png";

const imageList = [imgSlide1, imgSlide2, imgSlide3]
const { backgroundImage } = Astro.props;
---

<Section backgroundImage={backgroundImage}>
	<div class="hero-layout">
		<StarTrekText as="span" class="text-on-background" aria-hidden="true">
			Primego
		</StarTrekText>
		<div class="hero">
			<StarTrekText as="h1" class="page-title">Primego</StarTrekText>
			<div>
				<p class="lead">Ipsum consectetur</p>
				<p>
					Lorem ipsum dolor sit amet consectetur. Viverra quis eu turpis
					faucibus nec id.
				</p>
				<Button as="a" href="#customizer" class="button_ticket">
					Создай свой образ
				</Button>
			</div>
		</div>
		<div class="heroSlider-wrapper">
			<div class="splide" role="group" aria-hidden="true">
				<div class="splide__track">
					<div class="splide__list">
						{imageList.map((item) => (
							<Image
								src={item}
								class="splide__slide"
								alt=""
								loading="lazy"
							/>
						))}
					</div>
				</div>
			</div>
		</div>
	</div>
	<LimitCollection/>
</Section>

<style lang="scss">
	@keyframes slideInFromLeft {
		0% {
			transform: scale(1.1);
			opacity: 0;
		}
	}
	.text-on-background {
		font-size: min(60vw, var(--container-width-in-px) / 100 * 60);
		margin: 0;
		position: absolute;
		top: var(--size-5);
		left: 0;
		width: 100%;
		height: 100vh;
		overflow: hidden;
		display: flex;
		justify-content: center;
		opacity: 0.15;
		z-index: -1;
		user-select: none;
		animation: 2s ease-out 0s 1 slideInFromLeft;
	}
	.page-title {
		margin-bottom: calc(var(--adaptive-pixel) * 30);
		font-size: calc(var(--adaptive-pixel) * 440);
	}
	.hero-layout {
		display: flex;
		margin-bottom: calc(var(--adaptive-pixel) * 150);
	}
	.hero {
		min-width: 40%;
	}
	.heroSlider-wrapper {
		display: flex;
    	align-self: flex-end;
		margin-left: calc(var(--adaptive-pixel) * 60 * -1);
	}
	@media screen and (width < 1024px) {
		.text-on-background {
			font-size: 53vw;
		}
	}
</style>


<script>
    import Splide from "@splidejs/splide/dist/js/splide.min.js";

    document.addEventListener("DOMContentLoaded", () => {
        var splide = new Splide(".splide", {
            type: "fade",
            rewind: true,
            lazyLoad: "nearby",
            autoplay: true,
            pagination: false,
        });
        splide.mount();
    });
</script>

<style lang="scss">
    .splide {
        & :global(.splide__arrows) {
            position: absolute;
            bottom: calc(var(--adaptive-pixel) * 200);
            display: flex;
            width: 100%;
            justify-content: space-between;
            z-index: 2;
        }
        & :global(.splide__arrow) {
            background: none;
            border: none;
            cursor: pointer;
        }
        & :global(.splide__track) {
            margin: 0 calc(var(--adaptive-pixel) * 60);
        }

        & :global(svg) {
            fill: var(--color-white);
            width: calc(var(--adaptive-pixel) * 35);
            height: calc(var(--adaptive-pixel) * 35);
        }
        & :global(.splide__arrow--prev) {
            transform: scale(-1);
        }
        & :global(.splide__arrow--next) {}
    }
</style>