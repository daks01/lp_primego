---
import Section from "../ui/Section.astro";
import SocialList from "../ui/SocialList.astro";
import Logo from "../ui/Logo.astro";
import LogoMobile from "../ui/LogoMobile.astro";
import ActionPanel from "../blocks/ActionPanel.astro";
import LanguagePicker from "../ui/LanguagePicker.astro";
import {
  getLangFromUrl,
  useTranslatedPath,
  useTranslations,
} from "../../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const translatePath = useTranslatedPath(lang);
const t = useTranslations(lang);

interface Props {
  variant?: "default" | "modest";
  as?: string;
  isHome?: boolean;
  backTo?: string;
  class?: string;
}
const {
  variant = "default",
  as: tag = "header",
  isHome = false,
  backTo = translatePath("/", lang),
  class: className,
} = Astro.props;
---

<Section as={tag} class:list={["header", variant, className]}>
  <div class="top-bar">
    <div class="top-bar__cell top-bar__cell_1">
      <a
        href={backTo}
        aria-label={t("header.На предыдущую страницу")}
        class="back-button"
        hidden={isHome}
      >
        <svg
          role="presentation"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M19 12H5"
            stroke="white"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"></path>
          <path
            d="M12 19L5 12L12 5"
            stroke="white"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"></path>
        </svg>
      </a>
      <SocialList class="display-mobile-none" />
    </div>
    <div class="top-bar__cell top-bar__cell_2">
      <a href={translatePath("/", lang)} aria-label={t("header.На главную")}>
        <div class="show-on-desktop"><Logo/></div>
        <div class="show-on-mobile"><LogoMobile/></div>
      </a>
    </div>
    <div class="top-bar__cell top-bar__cell_3">
      <LanguagePicker />
      <ActionPanel variant={variant} />
    </div>
  </div>
</Section>

<style lang="scss">
  .header {
    background-color: var(--background-color);
    min-height: var(--header-height) !important;
    position: relative;
    z-index: 2 !important;
    overflow: inherit !important;
  }
  .top-bar {
    height: var(--header-height);
    display: flex;
    align-items: center;
  }
  .top-bar_in-footer {
    margin-bottom: var(--30px);
  }
  .top-bar__cell {
    display: flex;
    align-items: center;
  }
  .top-bar__cell_1,
  .top-bar__cell_3 {
    flex-grow: 1;
    flex-basis: 50%;
  }
  .top-bar__cell_3 {
    justify-content: flex-end;
    align-self: flex-start;
  }
  .back-button {
    display: none;
    svg {
      display: block;
      width: calc(var(--1px) * 24);
      height: calc(var(--1px) * 24);
    }
  }
  .header.modest {
    background-color: transparent;
    z-index: 5;
    position: absolute;
    top: 0;
    right: 0;
    left: 0;

    .top-bar__cell_1,
    .top-bar__cell_2 {
      display: none;
    }
  }
  .show-on-desktop {
    display: block;
  }
  .show-on-mobile {
    display: none;
  }
  @media screen and (max-width: 1023px) {
    .show-on-desktop {
      display: none;
    }
    .show-on-mobile {
      display: block;
    }
    .back-button {
      display: block;
      margin-right: var(--15px);
    }
    .top-bar__cell_1 {
      flex-basis: auto;
      flex-grow: inherit;
      flex-shrink: 0;
    }
    .top-bar {
      align-items: center;
    }
    .header.default,
    .header.modest {
      background-color: var(--background-color);
      position: relative;
      z-index: 2;

      .top-bar__cell {
        display: flex;
      }
    }
  }
</style>
