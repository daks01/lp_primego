---
const {
  as: Element = "button",
  href,
  class: className,
  ...props
} = Astro.props;
---

<Element {...props} href={href} class:list={["button", className]}>
  <slot />
</Element>

<style is:global>
.button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    margin: 0;
    transition: filter .1s;
    border: none;
	border-radius: var(--size-4);
    padding: calc(var(--adaptive-pixel) * 16) calc(var(--adaptive-pixel) * 30);
    background-color: var(--color-product);
    color: var(--button-text-color);
    font-weight: 600;
	font-size: calc(var(--adaptive-pixel) * 20);
    font-family: inherit;
    text-decoration: none;
    white-space: nowrap;
    cursor: pointer;
    user-select: none;
    transition: background-color 0.15s ease;

    &:hover {
        background-color: var(--color-product-hover);
    }
    &:active {
        background-color: var(--color-product-active);
    }
}

.button_secondary {
    padding: calc(var(--adaptive-pixel) * 16);
}

.button_icon {
    
}


@media screen and (width < 768px) {
    .button {
        width: 100%;
        font-size: calc(var(--adaptive-pixel)* 16);
        padding: calc(var(--adaptive-pixel)* 14);
    }
}
</style>
