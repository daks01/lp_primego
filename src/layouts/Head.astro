---
import "/src/assets/css/index.scss";
import env from '../utils/client'

const isProduction = env.MODE === "production";
const { title = "Primego" } = Astro.props;
const pageUrl = Astro.url;

const og_title = "Премиальные кроссовки. Шагай вместе с PRIMEGO";
const og_description = "Сделано в Москве. Качественные материалы. Стильные модели. Доставка по всей России на официальном сайте.";
---

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width" />
<meta name="generator" content={Astro.generator} />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />

<title>{`${title}. ${og_title}`}</title>
<meta name="description" content={og_description} />
<meta property="og:url" content={pageUrl} />
<meta property="og:title" content={og_title} />
<meta property="og:description" content={og_description} />
<meta property="og:image" content={`${pageUrl.origin}/og-image.png`} />
<meta property="og:type" content="website" />

{!isProduction && 
    <meta name="robots" content="noindex">
}
<link rel="sitemap" href="/sitemap-index.xml" />

<!-- Animation On Scroll -->
<style is:global>
    [data-animate] {
        opacity: 1;
        transform: none;
        transition:
            transform 1s,
            opacity 1s;

        &.will-animate {
            will-change: transform, opacity;
            transform: translateY(var(--60px));
            opacity: 0.5;
        }
    }
</style>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        initScrollAnimations();
    });

    function initScrollAnimations() {
        if (!"IntersectionObserver" in window) {
            return;
        }

        const observerElements = document.querySelectorAll("[data-animate]");
        const observerOptions = {
            root: null,
            rootMargin: "0px 0px",
            threshold: 0,
        };
        const observer = new IntersectionObserver(
            observerCallback,
            observerOptions,
        );

        [].forEach.call(observerElements, (element) =>
            observer.observe(element),
        );

        function observerCallback(entries) {
            entries?.forEach((entry) => {
                const animateEl = entry.target;

                if (entry.intersectionRatio > 0) {
                    animateEl?.classList.remove("will-animate");
                    observer.unobserve(entry.target);
                    return;
                }
                animateEl?.classList.add("will-animate");
            });
        }
    }
</script>